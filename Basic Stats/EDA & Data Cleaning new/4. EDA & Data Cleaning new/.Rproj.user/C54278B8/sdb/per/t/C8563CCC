{
    "contents" : "\ndata()\n\ndata(package = .packages(all.available = TRUE))\n\n# help , type mtcars in serach window\nmtcars = mtcars\ndata(\"mtcars\")\n?mtcars\nsummary(mtcars)\nnames(mtcars)\nstr(mtcars)\nhist(mtcars$mpg)\nsummary(mtcars$mpg)\nboxplot(mtcars$mpg,col = \"red\")\n\nplot(mtcars$mpg,mtcars$disp,col = \"red\")\n?plot\n\nboxplot(mtcars$disp~mtcars$gear, col = \"red\") # col = blue\n\ncounts= table (mtcars$vs,mtcars$gear)\ncounts\n\n?barplot\n\nbarplot(counts, main=\"Distribution\",\n        xlab = \"no of g\", col=c(\"darkblue\",\"red\"),\n        legend = rownames(counts))\n?barplot\n\nbarplot(counts, main=\"Distribution\",\n        xlab = \"no of g\", col=c(\"darkblue\",\"red\"))\n       \n\ncounts= table (mtcars$gear,mtcars$vs)\ncounts\n\nbarplot(counts, main=\"Distribution\",\n        xlab = \"no of g\", col=c(\"darkblue\",\"red\"))\n\n\n\n############################\n    ################################\n        ################################\n '''\nCreate barplots with the barplot(height) function, where height is a vector or matrix. \nIf height is a vector, the values determine the heights of the bars in the plot. If height is \na matrix and the option beside=FALSE then each bar of the plot corresponds to a column of height,\nwith the values in the column giving the heights of stacked “sub-bars”. If height is a matrix and \nbeside=TRUE, then the values in each column are juxtaposed rather than stacked. Include \noption names.arg=(character vector) to label the bars. The option horiz=TRUE to createa a \nhorizontal barplot.\n\n'''\n\n\n# Simple Bar Plot \ncounts <- table(mtcars$gear)\nbarplot(counts, main=\"Distribution\", \n        xlab=\"Number of Gears\")\n\n\n\n# Simple Horizontal Bar Plot with Added Labels \ncounts <- table(mtcars$gear)\nbarplot(counts, main=\"Distribution\", horiz=TRUE,\n        names.arg=c(\"3 Gears\", \"4 Gears\", \"5 Gears\"))\n\n\n# Stacked Bar Plot with Colors and Legend\ncounts <- table(mtcars$vs, mtcars$gear)\nbarplot(counts, main=\"Distribution by Gears and VS\",\n        xlab=\"Number of Gears\", col=c(\"darkblue\",\"red\"),\n        legend = rownames(counts))\n\n\n# Grouped Bar Plot\ncounts <- table(mtcars$vs, mtcars$gear)\nbarplot(counts, main=\"Distribution by Gears and VS\",\n        xlab=\"Number of Gears\", col=c(\"darkblue\",\"red\"),\n        legend = rownames(counts), beside=TRUE)\n\n\n################################################\n    ####################################################\n      ##########################################################\n        #####################################################################\n\n##### Data cleaning understanding \n\n\n####################################################\n     ########################################################\n            #############################################################\n                      ##############################################################\n\n\n\nlibrary(e1071) # skewness calculation\n\n\n##### A. Data Loading and object creation\n\ncust_data <- read.csv (\"data_cleaning.csv\")\n\n # cust_data <- na.omit(cust_data)\nstr(cust_data)\n\n # cust_data <- na.omit(read.csv (\"data_cleaning.csv\"))\n\nsummary(cust_data) # For data visualisation\n\n# cust_data <- na.omit(cust_data) # Delets missing value observations ( Omit this command if possible ) \n\n\n# Adding Total revenue variable\n\ncust_data$total_revenue = cust_data$purchase_revenue+ cust_data$purchase_renewal +cust_data$membership_revenue + cust_data$membership_renewal\n\n\n##### B. Data Visualization\n\nhist(cust_data$duration, prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$duration), sd=sd(cust_data$duration)), add=TRUE)\n\nhist(cust_data$membership_renewal , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$membership_renewal), sd=sd(cust_data$membership_renewal)), add=TRUE)\n\nhist(cust_data$purchase_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$purchase_revenue), sd=sd(cust_data$purchase_revenue)), add=TRUE)\n\nhist(cust_data$purchase_renewal , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$purchase_renewal), sd=sd(cust_data$purchase_renewal)), add=TRUE)\n\nhist(cust_data$last_1_month_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_1_month_revenue), sd=sd(cust_data$last_1_month_revenue)), add=TRUE)\n\nhist(cust_data$last_3_months_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_3_months_revenue), sd=sd(cust_data$last_3_months_revenue)), add=TRUE)\n\nhist(cust_data$last_3_months_selection , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_3_months_selection), sd=sd(cust_data$last_3_months_selection)), add=TRUE)\n\nhist(cust_data$total_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$total_revenue), sd=sd(cust_data$total_revenue)), add=TRUE)\n\n\nskewness(cust_data$duration)\nskewness(cust_data$membership_renewal)\nskewness(cust_data$purchase_revenue)\nskewness(cust_data$purchase_renewal)\nskewness(cust_data$last_1_month_revenue)\nskewness(cust_data$last_3_months_revenue)\nskewness(cust_data$last_3_months_selection)\nskewness(cust_data$last_3_months_selection)\nskewness(cust_data$total_revenue)\n\n\n\n##### C. Data Cleaning ( Outlier treatment, and missing value imputation)\n\nnames(cust_data) # Verifying the names of variables\n\n # mean and standard deviation calculation\n\n  y=mean(cust_data$duration)\n  s=sd(cust_data$duration)\n  \n  ucl<- y+3*s\n  ucl\n  lcl<- y-3*s \n  lcl\n\n\n# Caping the outliers \n\ncust_data$duration[cust_data$duration>1691]<- 1691\ncust_data$membership_revenue[cust_data$membership_revenue>0.00217]<- 0.00217\ncust_data$membership_renewal[cust_data$membership_renewal>45]<- 45\ncust_data$purchase_revenue[cust_data$purchase_revenue>13.73]<- 13.73\ncust_data$purchase_renewal[cust_data$purchase_renewal>39.83]<- 39.83\ncust_data$last_1_month_revenue[cust_data$last_1_month_revenue>17.68]<- 17.68\ncust_data$last_1_month_selection[cust_data$last_1_month_selection>1.67]<- 1.67\ncust_data$last_3_months_revenue[cust_data$last_3_months_revenue>41.95]<- 41.95\ncust_data$last_3_months_selection[cust_data$last_3_months_selection>2.68]<- 2.68\ncust_data$total_revenue[cust_data$total_revenue>77.74]<- 77.74\n\n# Imputing missing value with mean\n\ncust_data[which(is.na(cust_data$duration))] <- 368.25\ncust_data[which(is.na(cust_data$membership_revenue))] <- 0\ncust_data[which(is.na(cust_data$membership_renewal))] <- 13.86\ncust_data[which(is.na(cust_data$purchase_revenue))] <- 1.09\ncust_data[which(is.na(cust_data$purchase_renewal))] <- 5.07\ncust_data[which(is.na(cust_data$last_1_month_revenue))] <- 4.26\ncust_data[which(is.na(cust_data$last_3_months_revenue))] <- 10.98\ncust_data[which(is.na(cust_data$last_3_months_selection))] <- 0.50\ncust_data[which(is.na(cust_data$last_1_month_selection))] <- 0.29\ncust_data[which(is.na(cust_data$total_revenue))] <- 20.03\n\n\nhist(cust_data$duration, prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$duration), sd=sd(cust_data$duration)), add=TRUE)\n\nhist(cust_data$membership_renewal , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$membership_renewal), sd=sd(cust_data$membership_renewal)), add=TRUE)\n\nhist(cust_data$purchase_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$purchase_revenue), sd=sd(cust_data$purchase_revenue)), add=TRUE)\n\nhist(cust_data$purchase_renewal , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$purchase_renewal), sd=sd(cust_data$purchase_renewal)), add=TRUE)\n\nhist(cust_data$last_1_month_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_1_month_revenue), sd=sd(cust_data$last_1_month_revenue)), add=TRUE)\n\nhist(cust_data$last_3_months_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_3_months_revenue), sd=sd(cust_data$last_3_months_revenue)), add=TRUE)\n\nhist(cust_data$last_3_months_selection , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_3_months_selection), sd=sd(cust_data$last_3_months_selection)), add=TRUE)\n\nhist(cust_data$total_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$total_revenue), sd=sd(cust_data$total_revenue)), add=TRUE)\n\n\nskewness(cust_data$duration)\nskewness(cust_data$membership_renewal)\nskewness(cust_data$purchase_revenue)\nskewness(cust_data$purchase_renewal)\nskewness(cust_data$last_1_month_revenue)\nskewness(cust_data$last_3_months_revenue)\nskewness(cust_data$last_3_months_selection)\nskewness(cust_data$last_3_months_selection)\nskewness(cust_data$total_revenue)\n\n\n\ncust_data$duration<- log(cust_data$duration+1)\ncust_data$membership_renewal<- log(cust_data$membership_renewal +1)\ncust_data$purchase_revenue <- log(cust_data$purchase_revenue +1)\ncust_data$purchase_renewal <- log(cust_data$purchase_renewal +1)\ncust_data$last_1_month_revenue <- log(cust_data$last_1_month_revenue +1)\ncust_data$last_3_months_revenue <- log(cust_data$last_3_months_revenue+1)\ncust_data$Last_3_months_Selection <- log(cust_data$Last_3_months_Selection +1)\n\nhist(cust_data$duration, prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$duration), sd=sd(cust_data$duration)), add=TRUE)\n\nhist(cust_data$membership_renewal , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$membership_renewal), sd=sd(cust_data$membership_renewal)), add=TRUE)\n\nhist(cust_data$purchase_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$purchase_revenue), sd=sd(cust_data$purchase_revenue)), add=TRUE)\n\nhist(cust_data$purchase_renewal , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$purchase_renewal), sd=sd(cust_data$purchase_renewal)), add=TRUE)\n\nhist(cust_data$last_1_month_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_1_month_revenue), sd=sd(cust_data$last_1_month_revenue)), add=TRUE)\n\nhist(cust_data$last_3_months_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_3_months_revenue), sd=sd(cust_data$last_3_months_revenue)), add=TRUE)\n\nhist(cust_data$last_3_months_selection , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$last_3_months_selection), sd=sd(cust_data$last_3_months_selection)), add=TRUE)\n\nhist(cust_data$total_revenue , prob=TRUE)\ncurve(dnorm(x, mean=mean(cust_data$total_revenue), sd=sd(cust_data$total_revenue)), add=TRUE)\n\n\nskewness(cust_data$duration)\nskewness(cust_data$membership_renewal)\nskewness(cust_data$purchase_revenue)\nskewness(cust_data$purchase_renewal)\nskewness(cust_data$last_1_month_revenue)\nskewness(cust_data$last_3_months_revenue)\nskewness(cust_data$last_3_months_selection)\nskewness(cust_data$last_3_months_selection)\nskewness(cust_data$total_revenue)\n\nsummary(cust_data)\n\n\n# article on variable transformation\n# http://pareonline.net/getvn.asp?v=8&n=6\n\n",
    "created" : 1499063303594.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "660758393",
    "id" : "C8563CCC",
    "lastKnownWriteTime" : 1497101119,
    "path" : "D:/IMS/5. PPT New/4. EDA & Data Cleaning new/4. EDA & Data Cleaning new/3 EDA  Data Cleaning new.R",
    "project_path" : "3 EDA  Data Cleaning new.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}